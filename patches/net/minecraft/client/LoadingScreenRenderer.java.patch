--- a/net/minecraft/client/LoadingScreenRenderer.java
+++ b/net/minecraft/client/LoadingScreenRenderer.java
@@ -5,6 +5,7 @@
 import net.minecraft.client.renderer.OpenGlHelper;
 import net.minecraft.client.renderer.Tessellator;
 import net.minecraft.client.shader.Framebuffer;
+import net.minecraft.src.Reflector;
 import net.minecraft.util.IProgressUpdate;
 import net.minecraft.util.MinecraftError;
 import org.lwjgl.opengl.GL11;
@@ -23,13 +24,18 @@
     private long field_73723_d = Minecraft.getSystemTime();
     private boolean field_73724_e;
     private ScaledResolution field_146587_f;
-    private Framebuffer field_146588_g;
+    public Framebuffer field_146588_g;      // Minecrift
     private static final String __OBFID = "CL_00000655";
 
+	/** Minecrift **/
+    public Framebuffer renderTarget;
+	
+
     public LoadingScreenRenderer(Minecraft p_i1017_1_)
     {
         this.mc = p_i1017_1_;
         this.field_146587_f = new ScaledResolution(p_i1017_1_, p_i1017_1_.displayWidth, p_i1017_1_.displayHeight);
+        //this.field_146588_g = new Framebuffer("LoadingScreenRenderer", p_i1017_1_.displayWidth, p_i1017_1_.displayHeight, false);
         this.field_146588_g = new Framebuffer(p_i1017_1_.displayWidth, p_i1017_1_.displayHeight, false);
         this.field_146588_g.setFramebufferFilter(9728);
     }
@@ -154,60 +160,78 @@
                     GL11.glClear(GL11.GL_COLOR_BUFFER_BIT | GL11.GL_DEPTH_BUFFER_BIT);
                 }
 
-                Tessellator var8 = Tessellator.instance;
-                this.mc.getTextureManager().bindTexture(Gui.optionsBackground);
-                float var9 = 32.0F;
-                var8.startDrawingQuads();
-                var8.setColorOpaque_I(4210752);
-                var8.addVertexWithUV(0.0D, (double)var7, 0.0D, 0.0D, (double)((float)var7 / var9));
-                var8.addVertexWithUV((double)var6, (double)var7, 0.0D, (double)((float)var6 / var9), (double)((float)var7 / var9));
-                var8.addVertexWithUV((double)var6, 0.0D, 0.0D, (double)((float)var6 / var9), 0.0D);
-                var8.addVertexWithUV(0.0D, 0.0D, 0.0D, 0.0D, 0.0D);
-                var8.draw();
-
-                if (p_73718_1_ >= 0)
-                {
-                    byte var10 = 100;
-                    byte var11 = 2;
-                    int var12 = var6 / 2 - var10 / 2;
-                    int var13 = var7 / 2 + 16;
-                    GL11.glDisable(GL11.GL_TEXTURE_2D);
+                Object fmlClientHandler = null;
+                if( Reflector.FMLClientHandler_instance.exists()) 
+				{
+                    fmlClientHandler = Reflector.call( Reflector.FMLClientHandler_instance, new Object[0]);
+                }
+                if (fmlClientHandler == null || !Reflector.callBoolean(Reflector.FMLClientHandler_handleLoadingScreen, new Object[]{var4})) 
+				{
+                    Tessellator var8 = Tessellator.instance;
+                    this.mc.getTextureManager().bindTexture(Gui.optionsBackground);
+                    float var9 = 32.0F;
                     var8.startDrawingQuads();
-                    var8.setColorOpaque_I(8421504);
-                    var8.addVertex((double)var12, (double)var13, 0.0D);
-                    var8.addVertex((double)var12, (double)(var13 + var11), 0.0D);
-                    var8.addVertex((double)(var12 + var10), (double)(var13 + var11), 0.0D);
-                    var8.addVertex((double)(var12 + var10), (double)var13, 0.0D);
-                    var8.setColorOpaque_I(8454016);
-                    var8.addVertex((double)var12, (double)var13, 0.0D);
-                    var8.addVertex((double)var12, (double)(var13 + var11), 0.0D);
-                    var8.addVertex((double)(var12 + p_73718_1_), (double)(var13 + var11), 0.0D);
-                    var8.addVertex((double)(var12 + p_73718_1_), (double)var13, 0.0D);
+                    var8.setColorOpaque_I(4210752);
+                    var8.addVertexWithUV(0.0D, (double) var7, 0.0D, 0.0D, (double) ((float) var7 / var9));
+                    var8.addVertexWithUV((double) var6, (double) var7, 0.0D, (double) ((float) var6 / var9), (double) ((float) var7 / var9));
+                    var8.addVertexWithUV((double) var6, 0.0D, 0.0D, (double) ((float) var6 / var9), 0.0D);
+                    var8.addVertexWithUV(0.0D, 0.0D, 0.0D, 0.0D, 0.0D);
                     var8.draw();
-                    GL11.glEnable(GL11.GL_TEXTURE_2D);
-                }
 
-                GL11.glEnable(GL11.GL_BLEND);
-                OpenGlHelper.glBlendFunc(770, 771, 1, 0);
-                this.mc.fontRenderer.drawStringWithShadow(this.currentlyDisplayedText, (var6 - this.mc.fontRenderer.getStringWidth(this.currentlyDisplayedText)) / 2, var7 / 2 - 4 - 16, 16777215);
-                this.mc.fontRenderer.drawStringWithShadow(this.field_73727_a, (var6 - this.mc.fontRenderer.getStringWidth(this.field_73727_a)) / 2, var7 / 2 - 4 + 8, 16777215);
-                this.field_146588_g.unbindFramebuffer();
+                    if (p_73718_1_ >= 0)
+                    {
+                        byte var10 = 100;
+                        byte var11 = 2;
+                        int var12 = var6 / 2 - var10 / 2;
+                        int var13 = var7 / 2 + 16;
+                        GL11.glDisable(GL11.GL_TEXTURE_2D);
+                        var8.startDrawingQuads();
+                        var8.setColorOpaque_I(8421504);
+                        var8.addVertex((double) var12, (double) var13, 0.0D);
+                        var8.addVertex((double) var12, (double) (var13 + var11), 0.0D);
+                        var8.addVertex((double) (var12 + var10), (double) (var13 + var11), 0.0D);
+                        var8.addVertex((double) (var12 + var10), (double) var13, 0.0D);
+                        var8.setColorOpaque_I(8454016);
+                        var8.addVertex((double) var12, (double) var13, 0.0D);
+                        var8.addVertex((double) var12, (double) (var13 + var11), 0.0D);
+                        var8.addVertex((double) (var12 + p_73718_1_), (double) (var13 + var11), 0.0D);
+                        var8.addVertex((double) (var12 + p_73718_1_), (double) var13, 0.0D);
+                        var8.draw();
+                        GL11.glEnable(GL11.GL_TEXTURE_2D);
+                    }
+
+                    GL11.glEnable(GL11.GL_BLEND);
+                    OpenGlHelper.glBlendFunc(770, 771, 1, 0);
+                    this.mc.fontRenderer.drawStringWithShadow(this.currentlyDisplayedText, (var6 - this.mc.fontRenderer.getStringWidth(this.currentlyDisplayedText)) / 2, var7 / 2 - 4 - 16, 16777215);
+                    this.mc.fontRenderer.drawStringWithShadow(this.field_73727_a, (var6 - this.mc.fontRenderer.getStringWidth(this.field_73727_a)) / 2, var7 / 2 - 4 + 8, 16777215);
+                }
+/** Minecrift **/
+                if (OpenGlHelper.isFramebufferEnabled() && this.renderTarget != null)
+                {
+					this.renderTarget.bindFramebuffer(true);
+                }
+                else
+                {
+                    this.field_146588_g.unbindFramebuffer();
+                }
 
                 if (OpenGlHelper.isFramebufferEnabled())
                 {
                     this.field_146588_g.framebufferRender(var6 * var5, var7 * var5);
                 }
+				
+//				this.mc.func_147120_f();
 
-                this.mc.func_147120_f();
+//                try
+//                {
+//                    Thread.yield();
+//                }
+//                catch (Exception exception)
+//                {
+//                    ;
+//                }
+/** end Minecrift **/
 
-                try
-                {
-                    Thread.yield();
-                }
-                catch (Exception var14)
-                {
-                    ;
-                }
             }
         }
     }
