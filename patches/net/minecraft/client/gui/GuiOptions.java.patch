--- a/net/minecraft/client/gui/GuiOptions.java
+++ b/net/minecraft/client/gui/GuiOptions.java
@@ -1,5 +1,9 @@
 package net.minecraft.client.gui;
 
+import com.mtbs3d.minecrift.gui.BaseGuiSettings;
+import com.mtbs3d.minecrift.gui.GuiButtonEx;
+import com.mtbs3d.minecrift.gui.GuiMinecriftSettings;
+import net.minecraft.client.Minecraft;
 import net.minecraft.client.audio.PositionedSoundRecord;
 import net.minecraft.client.audio.SoundCategory;
 import net.minecraft.client.audio.SoundEventAccessorComposite;
@@ -9,8 +13,11 @@
 import net.minecraft.client.resources.I18n;
 import net.minecraft.client.settings.GameSettings;
 import net.minecraft.client.stream.IStream;
+import org.apache.commons.io.FilenameUtils;
 
-public class GuiOptions extends GuiScreen implements GuiYesNoCallback
+import java.io.File;
+
+public class GuiOptions extends BaseGuiSettings /* Minecrift */ implements GuiYesNoCallback
 {
     private static final GameSettings.Options[] field_146440_f = new GameSettings.Options[] {GameSettings.Options.FOV, GameSettings.Options.DIFFICULTY};
     private final GuiScreen field_146441_g;
@@ -20,6 +27,7 @@
 
     public GuiOptions(GuiScreen p_i1046_1_, GameSettings p_i1046_2_)
     {
+        super( p_i1046_1_, Minecraft.getMinecraft().vrSettings ); // Minecrift
         this.field_146441_g = p_i1046_1_;
         this.field_146443_h = p_i1046_2_;
     }
@@ -40,7 +48,17 @@
 
             if (var5.getEnumFloat())
             {
-                this.buttonList.add(new GuiOptionSlider(var5.returnEnumOrdinal(), this.width / 2 - 155 + var1 % 2 * 160, this.height / 6 - 12 + 24 * (var1 >> 1), var5));
+                /** Minecrift **/
+                if (var5.getEnumString().equalsIgnoreCase("options.fov"))
+                {
+                    GuiOptionButton var7 = new GuiOptionButton(666, this.width / 2 - 155 + var1 % 2 * 160, this.height / 6 - 12 + 24 * (var1 >> 1), "VR Settings...");
+                    this.buttonList.add(var7);
+                }
+                else
+                {
+                    /** end Minecrift **/
+                	this.buttonList.add(new GuiOptionSlider(var5.returnEnumOrdinal(), this.width / 2 - 155 + var1 % 2 * 160, this.height / 6 - 12 + 24 * (var1 >> 1), var5));
+                }
             }
             else
             {
@@ -58,7 +76,8 @@
             ++var1;
         }
 
-        this.buttonList.add(new GuiButton(8675309, this.width / 2 + 5, this.height / 6 + 48 - 6, 150, 20, "Super Secret Settings...")
+        // Minecrift - be helpful and actually display the shader name
+        this.buttonList.add(new GuiButtonEx(8675309, this.width / 2 + 5, this.height / 6 + 48 - 6, 150, 20, /*"Super Secret Settings..."*/getShaderButtonName())
         {
             private static final String __OBFID = "CL_00000701";
             public void func_146113_a(SoundHandler p_146113_1_)
@@ -95,6 +114,7 @@
             if (p_146284_1_.id == 8675309)
             {
                 this.mc.entityRenderer.activateNextShader();
+                this.reinit = true;
             }
 
             if (p_146284_1_.id == 101)
@@ -159,6 +179,13 @@
                     GuiStreamUnavailable.func_152321_a(this);
                 }
             }
+
+            /** Minecrift **/
+            if (p_146284_1_.id == 666)
+            {
+                this.mc.gameSettings.saveOptions();
+                this.mc.displayGuiScreen(new GuiMinecriftSettings(this, this.mc.vrSettings, this.field_146443_h));
+            }
         }
     }
 
@@ -171,4 +198,15 @@
         this.drawCenteredString(this.fontRendererObj, this.field_146442_a, this.width / 2, 15, 16777215);
         super.drawScreen(p_73863_1_, p_73863_2_, p_73863_3_);
     }
+
+    /** Minecrift */
+    public String getShaderButtonName()
+    {
+        String shaderFileName = (this.mc.entityRenderer.shaderIndex != this.mc.entityRenderer.shaderCount ? this.mc.entityRenderer.shaderResourceLocations[this.mc.entityRenderer.shaderIndex].toString() : "None");
+        System.out.println("ShaderIndex: " + this.mc.entityRenderer.shaderIndex);
+        File shaderFile = new File(shaderFileName);
+        String shaderName = FilenameUtils.removeExtension(shaderFile.getName());
+        String shaderButtonName = "Shader: " + shaderName;
+        return shaderButtonName;
+    }
 }
