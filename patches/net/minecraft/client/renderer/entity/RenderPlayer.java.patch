--- a/net/minecraft/client/renderer/entity/RenderPlayer.java
+++ b/net/minecraft/client/renderer/entity/RenderPlayer.java
@@ -22,6 +22,7 @@
 import net.minecraft.scoreboard.Score;
 import net.minecraft.scoreboard.ScoreObjective;
 import net.minecraft.scoreboard.Scoreboard;
+import net.minecraft.src.Reflector;
 import net.minecraft.util.MathHelper;
 import net.minecraft.util.ResourceLocation;
 import net.minecraft.util.StringUtils;
@@ -35,6 +36,9 @@
     private ModelBiped modelArmor;
     private static final String __OBFID = "CL_00001020";
 
+    /** Minecrift */
+    private float vrOffset;
+
     public RenderPlayer()
     {
         super(new ModelBiped(0.0F), 0.5F);
@@ -43,6 +47,15 @@
         this.modelArmor = new ModelBiped(0.5F);
     }
 
+    /** Minecrift */
+    public void setVR(boolean vrMode, boolean renderHeadWear, float offset) {
+
+        vrOffset = vrMode? offset : 0.0F;
+        this.modelBipedMain.vrOffset = this.modelArmorChestplate.vrOffset = this.modelArmor.vrOffset = vrOffset;
+        this.modelBipedMain._renderHead = this.modelArmorChestplate._renderHead = this.modelArmor._renderHead = !vrMode;
+        this.modelBipedMain._renderHeadWear = this.modelArmorChestplate._renderHeadWear = this.modelArmor._renderHeadWear = renderHeadWear;
+    }
+
     /**
      * Queries whether should render the specified pass or not.
      */
@@ -50,6 +63,15 @@
     {
         ItemStack var4 = p_77032_1_.inventory.armorItemInSlot(3 - p_77032_2_);
 
+        if (Reflector.forgeExists()) {
+            Object event = Reflector.newInstance(Reflector.ForgeRenderPlayerEvent_SetArmorModel_Constructor, new Object[]{p_77032_1_, this, 3 - p_77032_2_, p_77032_3_, var4});
+            Reflector.postForgeBusEvent(event);
+            int result = (Integer) Reflector.getFieldValue(Reflector.ForgeRenderPlayerEvent_SetArmorModel_result);
+            if (result != -1) {
+                return result;
+            }
+        }
+
         if (var4 != null)
         {
             Item var5 = var4.getItem();
@@ -66,12 +88,32 @@
                 var7.bipedLeftArm.showModel = p_77032_2_ == 1;
                 var7.bipedRightLeg.showModel = p_77032_2_ == 2 || p_77032_2_ == 3;
                 var7.bipedLeftLeg.showModel = p_77032_2_ == 2 || p_77032_2_ == 3;
+                if (Reflector.forgeExists())
+                    var7 = (ModelBiped)Reflector.call(Reflector.ForgeHooksClient_getArmorModel, new Object[] {p_77032_1_, var4, p_77032_2_, var7});
                 this.setRenderPassModel(var7);
                 var7.onGround = this.mainModel.onGround;
                 var7.isRiding = this.mainModel.isRiding;
                 var7.isChild = this.mainModel.isChild;
 
-                if (var6.getArmorMaterial() == ItemArmor.ArmorMaterial.CLOTH)
+				if (Reflector.forgeExists())
+				{
+	                int j = var6.getColor(var4);
+	                if (j != -1)
+	                {
+	                    float f1 = (float)(j >> 16 & 255) / 255.0F;
+	                    float f2 = (float)(j >> 8 & 255) / 255.0F;
+	                    float f3 = (float)(j & 255) / 255.0F;
+	                    GL11.glColor3f(f1, f2, f3);
+
+	                    if (var4.isItemEnchanted())
+	                    {
+	                        return 31;
+	                    }
+
+	                    return 16;
+	                }				
+				}
+                else if (var6.getArmorMaterial() == ItemArmor.ArmorMaterial.CLOTH)
                 {
                     int var8 = var6.getColor(var4);
                     float var9 = (float)(var8 >> 16 & 255) / 255.0F;
@@ -125,6 +167,9 @@
      */
     public void doRender(AbstractClientPlayer p_76986_1_, double p_76986_2_, double p_76986_4_, double p_76986_6_, float p_76986_8_, float p_76986_9_)
     {
+        if (Reflector.forgeExists()) {
+            if (Reflector.postForgeBusEvent(Reflector.ForgeRenderPlayerEvent_Pre_Constructor, new Object[]{p_76986_1_, this, p_76986_9_})) return;
+        }
         GL11.glColor3f(1.0F, 1.0F, 1.0F);
         ItemStack var10 = p_76986_1_.inventory.getCurrentItem();
         this.modelArmorChestplate.heldItemRight = this.modelArmor.heldItemRight = this.modelBipedMain.heldItemRight = var10 != null ? 1 : 0;
@@ -155,6 +200,9 @@
         this.modelArmorChestplate.aimedBow = this.modelArmor.aimedBow = this.modelBipedMain.aimedBow = false;
         this.modelArmorChestplate.isSneak = this.modelArmor.isSneak = this.modelBipedMain.isSneak = false;
         this.modelArmorChestplate.heldItemRight = this.modelArmor.heldItemRight = this.modelBipedMain.heldItemRight = 0;
+        if (Reflector.forgeExists()) {
+            if (Reflector.postForgeBusEvent(Reflector.ForgeRenderPlayerEvent_Post_Constructor, new Object[]{p_76986_1_, this, p_76986_9_})) return;
+        }
     }
 
     /**
@@ -167,6 +215,12 @@
 
     protected void renderEquippedItems(AbstractClientPlayer p_77029_1_, float p_77029_2_)
     {
+        Object event = null;
+        boolean Forge = Reflector.forgeExists();
+        if (Forge) {
+            event = Reflector.newInstance(Reflector.ForgeRenderPlayerEvent_Specials_Pre_Constructor, new Object[]{p_77029_1_, this, p_77029_2_});
+            if (Reflector.postForgeBusEvent(event)) return;
+        }
         GL11.glColor3f(1.0F, 1.0F, 1.0F);
         super.renderEquippedItems(p_77029_1_, p_77029_2_);
         super.renderArrowsStuckInEntity(p_77029_1_, p_77029_2_);
@@ -180,7 +234,14 @@
 
             if (var3.getItem() instanceof ItemBlock)
             {
-                if (RenderBlocks.renderItemIn3d(Block.getBlockFromItem(var3.getItem()).getRenderType()))
+				boolean is3D = true;
+				if (Forge) {
+                    Object itemRenderTypeEquipped = Reflector.getFieldValue(Reflector.ItemRenderType_EQUIPPED);
+                    Object itemRenderHelperType3D = Reflector.getFieldValue(Reflector.ForgeItemRendererHelper_BLOCK_3D);
+                    Object customRenderer = Reflector.call(Reflector.MinecraftForgeClient_getItemRenderer, new Object[] {var3, itemRenderTypeEquipped});
+                    is3D = (customRenderer != null && Reflector.callBoolean(customRenderer, Reflector.ForgeIItemRenderer_shouldUseRenderHelper, new Object[] {itemRenderTypeEquipped, var3, itemRenderHelperType3D}));
+				}
+                if (is3D && RenderBlocks.renderItemIn3d(Block.getBlockFromItem(var3.getItem()).getRenderType()))
                 {
                     var4 = 0.625F;
                     GL11.glTranslatef(0.0F, -0.25F, 0.0F);
@@ -241,6 +302,9 @@
         }
 
         boolean var21 = p_77029_1_.func_152122_n();
+		if (Forge) {
+			var21 = (Boolean) Reflector.getFieldValue(event, Reflector.ForgeRenderPlayerEvent_Specials_Pre_renderCape) && var21;
+		}
         float var11;
 
         if (var21 && !p_77029_1_.isInvisible() && !p_77029_1_.getHideCape())
@@ -291,8 +355,11 @@
         }
 
         ItemStack var24 = p_77029_1_.inventory.getCurrentItem();
-
-        if (var24 != null)
+		boolean eventRenderItem = true;
+		if (Forge)
+			eventRenderItem = (Boolean) Reflector.getFieldValue(event, Reflector.ForgeRenderPlayerEvent_Specials_Pre_renderItem);
+			
+        if (var24 != null && eventRenderItem)
         {
             GL11.glPushMatrix();
             this.modelBipedMain.bipedRightArm.postRender(0.0625F);
@@ -310,7 +377,14 @@
                 var26 = var24.getItemUseAction();
             }
 
-            if (var24.getItem() instanceof ItemBlock && RenderBlocks.renderItemIn3d(Block.getBlockFromItem(var24.getItem()).getRenderType()))
+			boolean is3D = true;
+            if (Forge) {
+                Object itemRenderTypeEquipped = Reflector.getFieldValue(Reflector.ItemRenderType_EQUIPPED);
+                Object itemRenderHelperType3D = Reflector.getFieldValue(Reflector.ForgeItemRendererHelper_BLOCK_3D);
+                Object customRenderer = Reflector.call(Reflector.MinecraftForgeClient_getItemRenderer, new Object[] {var24, itemRenderTypeEquipped});
+                is3D = (customRenderer != null && Reflector.callBoolean(customRenderer, Reflector.ForgeIItemRenderer_shouldUseRenderHelper, new Object[] {itemRenderTypeEquipped, var24, itemRenderHelperType3D}));
+            }
+            if (is3D && var24.getItem() instanceof ItemBlock && RenderBlocks.renderItemIn3d(Block.getBlockFromItem(var24.getItem()).getRenderType()))
             {
                 var7 = 0.5F;
                 GL11.glTranslatef(0.0F, 0.1875F, -0.3125F);
@@ -367,7 +441,11 @@
 
             if (var24.getItem().requiresMultipleRenderPasses())
             {
-                for (var28 = 0; var28 <= 1; ++var28)
+				int numOfRenderPasses = 2;
+				if (Forge) {
+				    numOfRenderPasses = Reflector.callInt(var24.getItem(), Reflector.MinecraftItem_Forge_getRenderPasses, new Object[] {var24.getItemDamage()});
+				}
+                for (var28 = 0; var28 < numOfRenderPasses; ++var28)
                 {
                     int var8 = var24.getItem().getColorFromItemStack(var24, var28);
                     var30 = (float)(var8 >> 16 & 255) / 255.0F;
@@ -389,6 +467,9 @@
 
             GL11.glPopMatrix();
         }
+        if (Forge) {
+            Reflector.postForgeBusEvent(Reflector.ForgeRenderPlayerEvent_Specials_Post_Constructor, new Object[]{p_77029_1_, this, p_77029_2_});
+        }
     }
 
     /**
